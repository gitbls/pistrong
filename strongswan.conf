# Fail2Ban filter for strongswan
#

[INCLUDES]

# Read common prefixes. If any customizations available -- read them from
# common.local
before = common.conf

[Definition]

_daemon = (?:charon|ipsec|charon-systemd)

# The pattern (\d+\[\S+\] ) accomodates legacy message format. charon-systemd messages don't have this component
failregex = ^%(__prefix_line)s(\d+\[\S+\] )?received invalid IKE header from <HOST>.* ignored$
            ^%(__prefix_line)s(\d+\[\S+\] )?no IKE config found for \S+\.\.\.<HOST>, sending NO_PROPOSAL_CHOSEN$
            ^%(__prefix_line)s(\d+\[\S+\] )?received proposals inacceptable.*<SKIPLINES>.*sending packet: from.* to <HOST>\[\d+\].*$
            ^%(__prefix_line)s(\d+\[\S+\] )?generating INFORMATIONAL_V1 request.*\[.*N\(NO_PROP\).*\]<SKIPLINES>.*sending packet: from.* to <HOST>\[\d+\].*$
#            ^%(__prefix_line)s(\d+\[\S+\] )?generating IKE_SA_INIT response \d+ \[.*No CERTREQ N\(MULT_AUTH\).*\]<SKIPLINES>.*sending packet: from .* to <HOST>\[\d+\].*$
            ^%(__prefix_line)s(\d+\[\S+\] )?generating IKE_SA_INIT response \d+ \[.*No CERTREQ.*\]<SKIPLINES>.*sending packet: from .* to <HOST>\[\d+\].*$
            ^%(__prefix_line)s(\d+\[\S+\] )?generating IKE_SA_INIT response \d+ \[.*N\(INVAL_KE\).*\]<SKIPLINES>.*sending packet: from .* to <HOST>\[\d+\].*$
            ^%(__prefix_line)s(\d+\[\S+\] )?generating IKE_SA_INIT response \d+ \[.*N\(INVAL_SYN\).*\]<SKIPLINES>.*sending packet: from .* to <HOST>\[\d+\].*$
            ^%(__prefix_line)s(\d+\[\S+\] )?generating IKE_AUTH response \d+ \[.*N\(AUTH_FAILED\).*\]<SKIPLINES>.*sending packet: from .* to <HOST>\[\d+\].*$
            ^%(__prefix_line)s(\d+\[\S+\] )?.* verification failed, retry \(\d+\).*<SKIPLINES>.*sending packet: from .* to <HOST>\[\d+\].*$
	    ^%(__prefix_line)s(\d+\[\S+\] )?received unsupported IKE version .* from <HOST>, sending INVALID_MAJOR_VERSION$
	    ^%(__prefix_line)s(\d+\[\S+\] )?generating IKE_AUTH response \d+ \[.*EAP/FAIL.*\].*<SKIPLINES>.*sending packet: from.* to <HOST>\[\d+\].*$

ignoreregex = 

[Init]

# "maxlines" is number of log lines to buffer for multi-line regex searches
maxlines = 6

journalmatch = _SYSTEMD_UNIT=strongswan.service
